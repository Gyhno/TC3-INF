

class RequestHandler(http.server.SimpleHTTPRequestHandler):
    static_dir = '/client'
    server_version = 'Server v0'



    # Pour gérer les requetes de types HEAD
    def do_HEAD(self):
        self.send_static()
    


     # Pour gérer les requetes de types GET
    def do_GET(self):
        self.init_params()
        
        if self.path_info[0] == "service" and self.path_info[1] == "country":
            self.send_info(self.path_info[2])   
                 
        elif self.path_info[0] == "service" and self.path_info[1] == "continent":
            self.send_info_carte(self.path_info[2])
        else:
            self.send_static()









#on définit la classe : 
class RequestHandler(http.server.SimpleHTTPRequestHandler):

# méthode qui véhicule les info à l'utilisateur : 
  def send_info(self,country):
    req=conn.cursor() #correspond à la requete dans la base de données
    req.execute("SELECT*ROM countries WHERE nam = '"+country+"'")
    result = requ.fetchall() #renvoie toutes les lignes de la requête 
    print(result)
    if result==[]:
      print("Ce pays n'est pas dans la base de données")
    else : 
      data = result[0] 
      # puis il faut mettre les données sous forme de dictionnaire 
      j=0
      dico = {}
      for row in data :
        dico[table[j]]=row
        j+=1
      print(dico)
    #mettre ces données sous forme json :
    self.send_json(dico)
    

  #méthode pour envoyer l'objet statique voulu : 
  def send_static (self):
    self.path = self.static_dir + self_path #on met le répertoire en préfixe pour changer le chemin d'accès
    #puis avec la methode parent : 
    if (self.command===='HEAD'):
      http.server.SimpleHTTPRequestHandler.do_HEAD(self) # avec verbe HEAD 
    else : 
      http.server.SimpleHTTPRequestHandler.do_GET(self) # avec verbe GET 
    
    
